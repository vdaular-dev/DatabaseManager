<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AACIiIg6jouLoY6Li6GMiYmjjImJo4yJiaOOi4uhjouLoY6Li6GOi4uhjouLoYiIhDwAAAAAQEREBEBE
        RARAREQEjouLof///////////v7+/9XU1P/3+Pj/+Pn5/9nY2P////////////////+Oi4uhAAAAAAAA
        AABAREQIQEREBI6Li6Ha2dn/2tnZ/9rZ2f/Gxsb/0tHR/9HQ0P/AwMD/2djY/9rZ2f/a2dn/jouLoQAA
        AAAAAAAAAAAAAEBERASOi4uh////////////////2tnZ//7+/v/19fX/0dDQ//X19f/+/v7//////46L
        i6EAAAAAAAAAAAAAAAAAAAAAjouLodrZ2f/a2dn/2tnZ/8fHx//a2dn/2djY/8DAwP/R0ND/0tHR/9nY
        2P+Oi4uhAAAAAAAAAAAAAAAAAAAAAI6Li6H////////////////a2dn////////////Z2Nj/9fX1//T0
        9P/19fX/jYqKoY6Li6GOi4uhjouLoYiEhDqOi4uh19bW/9nY2P/a2dn/x8fH/9rZ2f/a2dn/x8fH/9nY
        2P/S0dH/0dDQ/4iFhaX+/v7///////////+Oi4uhjouLofv7+//4+fn//v7+/9rZ2f///////////9rZ
        2f///////v7+//X19f+HhISn0tHR/9nY2P/a2dn/jouLoZiAa7OukHDxq45v8aqNb/GwmYL1sJFx8bCR
        cfGxmoL1sJFx8bCRcfGvkHHxknxot/T09P/19fX//v7+/46Li6G0eT9+tHk+/7B3Pv+tdj7/rnY+/7N5
        Pv+0eT7/tHk+/7R5Pv+0eT7/tHk+/7J4P37S0dH/0dDQ/9XU1P+Oi4uht3hAILR5P36yej6BqHU/h6Z0
        P4modT+Hsnk+gbN6PoGzej6Bs3o+gbR5P37Qv7B2/v7+//X19f/3+Pj/jImJowAAAAAAAAAAAAAAAEBE
        RAKIhYWl0dDQ/9LR0f/Z2Nj/x8fH/9rZ2f/a2dn/x8fH/9rZ2f/Z2Nj/1dTU/4yJiaMAAAAAAAAAAAAA
        AAAAAAAAjYqKofX19f/09PT/9fX1/9nY2P///////////9rZ2f////////////7+/v+MiYmjAAAAAAAA
        AAAAAAAAAAAAAJiAa7OvkXHxrI5v8auOb/Gtl4D1r5Fx8bCRcfGxmoL1sJFx8bCRcfGwkXHxmIBrswAA
        AAAAAAAAAAAAAAAAAAC0eT9+tHk+/7R5Pv+yeD7/sng+/7J4Pv+0eT7/tHk+/7R5Pv+0eT7/tHk+/7R5
        P34AAAAAAAAAAAAAAAAAAAAAt3hAILR5P36zej6Bs3o+gbN6PoGzej6Bs3o+gbN6PoGzej6Bs3o+gbR5
        P363eEAggB8AAAAPAAAADwAAAA8AAAAPAAAAAQAAAAAAAAAAAAAAAAAAgBAAAMAwAADwAAAA8AAAAPAA
        AAD4AQAA/AMAAA==
</value>
  </data>
</root>